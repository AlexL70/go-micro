version: '3'

services:
  
  caddy:
    image: alexanderlevinson70/micro-caddy:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  front-end:
    image: alexanderlevinson70/front-end-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  broker-service:
    image: alexanderlevinson70/brocker-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    image: alexanderlevinson70/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    image: alexanderlevinson70/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      GOMICRO_AUTH_DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: alexanderlevinson70/logger-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1
  
  mail-service:
    image: alexanderlevinson70/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  rabbitmq:
    image: rabbitmq:4.0.5-alpine
    ports:
      - "5672:5672"
    deploy:
      mode: global
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "8025:8025"
    deploy:
      mode: global

  mongo:
    image: mongo:6.0.19-jammy
    ports:
      - "27017:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_ROOT_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo:/data/db

  postgres:
    image: postgres:16.2
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: global
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres:/var/lib/postgresql/data


volumes:
  caddy_data:
    external: true
  caddy_config:
